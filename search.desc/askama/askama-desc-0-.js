searchState.loadedDescShard("askama", 0, "Crates.io GitHub Workflow Status Book docs.rs\nAn error raised by using <code>?</code> in a template\n<code>dyn</code>-compatible wrapper trait around <code>Template</code> implementers\nContains the error value\naskama’s error type\nTypes implementing this trait can be written without …\nGeneric, unspecified formatting error\nNo runtime values provided.\nContains the success value\nA type that is, references, or wraps a [primitive][…\nThe <code>Result</code> type with <code>Error</code> as default error type\nProvides a rough estimate of the expanded length of the …\nMain <code>Template</code> trait; implementations are generally derived\nThe <code>Template</code> derive macro and its <code>template()</code> attribute.\nA value in a <code>Values</code> collection.\nKey not present in <code>Values</code>\nIncompatible value type for key in <code>Values</code>\nA runtime value store for <code>Template::render_with_values()</code>.\nCapture an <code>StdError</code>\nHelper method which allocates a new <code>String</code> and renders …\nRenders the template to the given <code>writer</code> fmt buffer.\nRenders the template to the given <code>writer</code> fmt buffer with …\nHelper method which allocates a new <code>String</code> and renders …\nModule for built-in filter functions\nReturns the argument unchanged.\nTry to find <code>key</code> in <code>values</code> and then to convert it to <code>T</code>.\nTry to find <code>key</code> in this store.\nCalls <code>U::from(self)</code>.\nConvert this <code>Error</code> into a Box&lt;dyn StdError + Send + Sync&gt;\nReturns a reference to this value unless it is <code>None</code>.\nHelper method which allocates a new <code>String</code> and renders …\nRenders the template to the given <code>writer</code> fmt buffer.\nRenders the template to the given <code>writer</code> fmt buffer with …\nHelper method which allocates a new <code>String</code> and renders …\nProvides a conservative estimate of the expanded length of …\nUsed internally by askama to speed up writing some types.\nA prefix usable for indenting prettified JSON data and …\nUsed internally by askama to select the appropriate escaper\nUsed internally by askama to select the appropriate escaper\nA possible error that can occur while checking the value.\nEarly error testing for the input value, usually <code>Infallible</code>\nThe wrapped or converted result type\nEscapers are used to make generated text safe for printing …\nEscape characters in a safe way for HTML texts and …\nTypes that implement this marker trait don’t need to be …\nLike <code>Safe</code>, but only for HTML output\nMark the output of a filter as “maybe safe”\nThe contained value needs to be escaped\nAn integer that can have the value <code>+1</code> and maybe <code>-1</code>.\nMark the output of a filter as “safe”\nThe contained value does not need escaping\nDon’t escape the input but return in verbatim\nThere is not need to mark the output of a custom filter as …\nUsed internally by askama to select the appropriate …\nUsed internally by askama to select the appropriate …\nBorrow <code>self</code> as prefix to use.\nUsed internally by askama to select the appropriate escaper\nUsed internally by askama to select the appropriate …\nCapitalize a value. The first character will be uppercase, …\nCenters the value in a field of a given width\nAlias for <code>escape()</code>\nEscapes strings according to the escape mode.\nReturns adequate string representation (in KB, ..) of …\nFormats arguments according to the specified format\nFormats arguments according to the specified format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIndent lines with spaces or a prefix.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if and only if the value is <code>±1</code>.\nJoins iterable into a string separated by provided argument\nReplaces line breaks in plain text with appropriate HTML\nConverts all newlines in a piece of plain text to HTML …\nConverts to lowercase\nConverts to lowercase, alias for the <code>|lower</code> filter\nUsed internally by askama to select the appropriate escaper\nReplaces only paragraph breaks in plain text with …\nFor a value of <code>±1</code> by default an empty string <code>&quot;&quot;</code> is …\nMarks a string (or other <code>Display</code> type) as safe\nReturn a title cased version of the value. Words will …\nReturn a title cased version of the value. Alias for the …\nStrip leading and trailing whitespace\nLimit string length, appends ‘…’ if truncated\nConverts to uppercase\nConverts to uppercase, alias for the <code>|upper</code> filter\nCount the words in that string.\nEscaped the input char <code>c</code> into <code>dest</code>\nEscaped the input char <code>c</code> into <code>dest</code>\nEscaped the input string <code>string</code> into <code>dest</code>")