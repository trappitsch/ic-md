searchState.loadedDescShard("kdl", 0, "<code>kdl</code> is a “document-oriented” parser and API for the …\nA KDL Boolean.\nIterator for child nodes for this node. Empty if there is …\nIterator for child nodes for this node. Empty if there is …\nIterator for entries in a node, including properties.\nMutable iterator for entries in a node, including …\nA floating point KDL Number\nFormatting configuration for use with …\nA <code>FormatConfig</code> builder.\nIndex for a node argument entry (positional value).\nA non-float KDL Number\nAn individual diagnostic message for a KDL parsing issue.\nRepresents a KDL <code>Document</code>.\nFormatting details for <code>KdlDocument</code>s.\nKDL Entries are the “arguments” to KDL nodes: either a …\nFormatting details for <code>KdlEntry</code>s.\nThe toplevel <code>Error</code> type for KDL: this is returned when a …\nRepresents a KDL Identifier.\nRepresents an individual KDL <code>Node</code> inside a KDL Document.\nFormatting details for <code>KdlNode</code>.\nA specific KDL Value.\nKey for a node property entry.\nRepresents a <code>KdlNode</code>’s entry key.\nThe KDL Null Value.\nA KDL String.\nWhitespace and comments between an entry’s equals sign …\nWhitespace and comments between an entry’s key name and …\nWhitespace and comments after the entry’s type annotation…\nWhitespace and comments after a node’s type annotation.\nWhitespace and comments between the actual type name and …\nWhitespace and comments between the annotation name and …\nReturns <code>Some(bool)</code> if the <code>KdlValue</code> is a <code>KdlValue::Bool</code>, …\nReturns <code>Some(f64)</code> if the <code>KdlValue</code> is a <code>KdlValue::Float</code>, …\nReturns <code>Some(i128)</code> if the <code>KdlValue</code> is a <code>KdlValue::Integer</code>, …\nReturns <code>Some(&amp;str)</code> if the <code>KdlValue</code> is a <code>KdlValue::String</code>, …\nAuto-formats this Document, making everything nice while …\nAuto-formats this entry.\nAuto-formats this identifier.\nAuto-formats this node and its contents.\nFormats the document according to <code>config</code>.\nAuto-formats this node and its contents according to <code>config</code>…\nDo not clobber this format during autoformat\nFormats the document and removes all comments from the …\nAuto-formats this node and its contents, stripping …\nWhitespace and comments preceding the node’s children …\nWhitespace and comments right before the node’s …\nWhitespace and comments between the opening <code>(</code> of an entry…\nWhitespace and comments between the opening <code>(</code> of a type …\nBuilds the <code>FormatConfig</code>.\nCreates a new <code>FormatConfigBuilder</code> with default …\nReturns a reference to this node’s children, if any.\nReturns a mutable reference to this node’s children, if …\nShorthand for <code>self.entries_mut().clear()</code>\nRemoves this node’s children completely.\nClears leading and trailing text (whitespace, comments). …\nClears leading and trailing text (whitespace, comments), …\nResets this identifier to its default representation. It …\nClears leading and trailing text (whitespace, comments), …\nClears leading and trailing text (whitespace, comments), …\nClears leading and trailing text (whitespace, comments), …\nSub-diagnostics for this failure.\nReturns a mutable reference to this node’s children …\nMakes sure this document is in v2 format.\nMakes sure this entry is in v2 format.\nMakes sure this node is in v2 format.\nReturns a reference to this node’s entries (arguments …\nReturns a mutable reference to this node’s entries …\nFetches an entry by key. Number keys will look up …\nWhether to keep individual entry formatting.\nFetches a mutable referene to an entry by key. Number keys …\nGets the formatting details for this entry.\nGets the formatting details for this entry.\nGets the formatting details for this node.\nGets a mutable reference to this entry’s formatting …\nGets a mutable reference to this entry’s formatting …\nGets a mutable reference to this node’s formatting …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the first child node with a matching name.\nGets a value by key. Number keys will look up arguments, …\nGets the first argument (value) of the first child node …\nGets a mutable reference to the first argument (value) of …\nGets a reference to the first child node with a matching …\nFetches a mutable referene to an value by key. Number keys …\nSuggestion for fixing the parser error.\nThe indentation to use at each level. Defaults to four …\nThe indentation to use at each level. Defaults to four …\nHow deeply to indent the overall node or document, in …\nHow deeply to indent the overall node or document, in …\nOriginal input that this failure came from.\nShared source for the diagnostic.\nInserts an entry into this node. If an entry already …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the value is a <code>KdlValue::Bool</code>.\nReturns true if this document is completely empty …\nReturns true if this entry is completely empty (including …\nReturns true if this identifier is completely empty.\nReturns true if this node is completely empty (including …\nReturns <code>true</code> if the value is a <code>KdlValue::Float</code>.\nReturns <code>true</code> if the value is a <code>KdlValue::Integer</code>.\nReturns <code>true</code> if the value is a <code>KdlValue::Null</code>.\nReturns <code>true</code> if the value is a <code>KdlValue::String</code>.\nReturns an iterator over the node’s entries, including …\nReturns an iterator of the all node arguments (value) of …\nReturns an iterator over the node’s children, if any. …\nReturns a mutable iterator over the node’s children, if …\nThis utility makes it easy to interact with a KDL …\nReturns a mutable iterator over the node’s entries, …\nKeeps the general entry formatting, though v1 entries will …\nLabel text for this span. Defaults to <code>&quot;here&quot;</code>.\nWhitespace and comments preceding the document’s first …\nWhitespace and comments preceding the entry itself.\nWhitespace and comments preceding the node itself.\nLength of this document when rendered as a string.\nLength of this entry when rendered as a string.\nLength of this identifier when rendered as a string.\nNumber of entries in this node.\nThe indentation to use at each level. Defaults to four …\nHow deeply to indent the overall node or document, in …\nWhether to remove comments. Defaults to <code>false</code> iff not …\nMessage for the error itself.\nGets a reference to this entry’s name, if it’s a …\nGets this node’s name.\nGets a mutable reference to this node’s name.\nGets a mutable reference to this node’s name.\nCreates a new Document.\nCreates a new Argument (positional) KdlEntry.\nCreates a new <code>FormatConfig</code> builder with default …\nCreates a new KdlNode with a given name.\nCreates a new Property (key/value) KdlEntry.\nWhether to remove comments. Defaults to <code>false</code> iff not …\nWhether to remove comments. Defaults to <code>false</code>.\nReturns a reference to this document’s child nodes.\nReturns a mutable reference to this document’s child …\nParses a string into a document.\nParses a string into a entry.\nParses a string into a entry.\nParses a string into a node.\nParses a KDL v2 string into a document.\nShorthand for <code>self.entries_mut().push(entry)</code>.\nRemoves an entry from this node. If an entry already …\nGets the custom string representation for this identifier, …\nRetains only the elements specified by the predicate.\nSets the KdlDocument representing this node’s children.\nSets the formatting details for this entry.\nSets the formatting details for this entry.\nSets the formatting details for this node.\nSets this node’s name.\nSets this node’s name.\nSets a custom string representation for this identifier.\nSets this document’s span.\nSets this entry’s span.\nSets this identifier’s span.\nSets this node’s span.\nSets the entry’s type.\nSets the node’s type identifier.\nSets the entry’s value.\nSets the string value for this identifier.\nSeverity level for the Diagnostic.\nSorts the slice with a comparison function, preserving …\nSorts the slice with a key extraction function, preserving …\nGets this document’s span.\nGets this entry’s span.\nGets this identifier’s span.\nGets this node’s span.\nOffset in chars of the error.\nThe terminator for the node.\nWhitespace and comments following the document’s last …\nWhitespace and comments following the entry itself.\nWhitespace and comments following the node itself, after …\nGets the entry’s type.\nGets the node’s type identifier, if any.\nGets a mutable reference to this entry’s type.\nGets a mutable reference to the node’s type identifier.\nGets the entry’s value.\nGets the string value for this identifier.\nGets a mutable reference to this entry’s value.\nThe actual text representation of the entry’s value.")